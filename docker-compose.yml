version: "3.9"

networks:
    api-network:
        name: api-network
        driver: bridge

services:
    knowledge-api:
        container_name: ${APP_NAME:-knowledge-api}
        image: ${APP_NAME:-knowledge-api}:${APP_VERSION:-latest}
        restart: unless-stopped
        build:
            context: .
            dockerfile: docker/Dockerfile
            target: development
        ports:
            - 8000:80
        volumes:
            - ./:/var/www/knowledge:rw
        networks:
            - api-network
        depends_on:
            postgres:
                condition: service_healthy

    postgres:
        container_name: postgres
        image: postgres:14.3-alpine3.15
        ports:
            - 5432:5432
        restart: always
        environment:
            POSTGRES_DB: ${DB_DATABASE:-database}
            POSTGRES_USER: ${DB_USERNAME:-myuser}
            POSTGRES_PASSWORD: ${DB_PASSWORD:-mypassword}
        healthcheck:
            test: [CMD-SHELL, pg_isready, -U, $POSTGRES_USER, -d, $POSTGRES_DB]
            interval: 30s
            timeout: 60s
            retries: 5
            start_period: 80s
        volumes:
            - pg-storage:/var/lib/postgresql/data:rw
        networks:
            - api-network

    swagger-ui:
        container_name: swagger-ui
        image: swaggerapi/swagger-ui:v4.11.1
        ports:
            - 8080:8080
        volumes:
            - ./doc:/usr/share/nginx/html/doc:ro
        environment:
            API_URL: doc/openapi.yaml
        networks:
            - api-network

volumes:
    pg-storage:
        name: pg-storage
        driver: local
